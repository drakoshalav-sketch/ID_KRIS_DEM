"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å ETL –ø–∞–∫–µ—Ç–∞ —Å CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.
"""

import argparse
import sys
from etl.extract import extract_data
from etl.transform import transform_data
from etl.load import load_data


def run_etl(file_id: str, table_name: str = "demidova", max_rows: int = 100) -> None:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π ETL –ø—Ä–æ—Ü–µ—Å—Å

    Args:
        file_id: Google Drive FILE_ID –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        table_name: –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î
        max_rows: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –ë–î
    """
    print("\n" + "üöÄ " * 35)
    print("–ó–ê–ü–£–°–ö ETL –ü–†–û–¶–ï–°–°–ê")
    print("üöÄ " * 35 + "\n")

    try:
        # EXTRACT
        raw_data_path = extract_data(file_id)

        # TRANSFORM
        transformed_df = transform_data(raw_data_path)

        # LOAD
        load_data(transformed_df, table_name, max_rows)

        print("\n" + "üéâ " * 35)
        print("ETL –ü–†–û–¶–ï–°–° –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print("üéâ " * 35 + "\n")

    except Exception as e:
        print(f"\n‚ùå ETL –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω —Å –æ—à–∏–±–∫–æ–π: {e}")
        sys.exit(1)


def main():
    """
    CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è ETL –ø–∞–∫–µ—Ç–∞
    """
    parser = argparse.ArgumentParser(
        description="ETL –ø–∞–∫–µ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–∫–∞–Ω—Å–∏—è—Ö",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  python -m etl.main --file-id YOUR_FILE_ID
  python -m etl.main --file-id YOUR_FILE_ID --table demidova --max-rows 100
        """
    )

    parser.add_argument(
        '--file-id',
        type=str,
        required=True,
        help='Google Drive FILE_ID –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä)'
    )

    parser.add_argument(
        '--table',
        type=str,
        default='demidova',
        help='–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ PostgreSQL (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: demidova)'
    )

    parser.add_argument(
        '--max-rows',
        type=int,
        default=100,
        help='–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –ë–î (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 100)'
    )

    args = parser.parse_args()

    # –ó–∞–ø—É—Å–∫ ETL
    run_etl(
        file_id=args.file_id,
        table_name=args.table,
        max_rows=args.max_rows
    )


if __name__ == "__main__":
    main()
